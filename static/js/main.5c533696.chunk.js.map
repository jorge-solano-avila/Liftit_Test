{"version":3,"sources":["containers/LogIn/reducer.ts","containers/LogIn/constants.ts","containers/App/reducer.ts","containers/App/constants.ts","reducers.ts","store.ts","components/ServiceForm/index.tsx","components/MapWrapper/index.jsx","utils/storage.ts","containers/App/index.tsx","containers/App/actions.ts","components/LogInForm/index.tsx","containers/LogIn/index.tsx","containers/LogIn/actions.ts","containers/Root/index.tsx","serviceWorker.js","index.tsx"],"names":["initialState","authenticated","logInReducer","state","arguments","length","undefined","type","Object","assign","serviceCreated","sourceLocation","destinationLocation","distance","appReducer","action","rootReducer","combineReducers","app","logIn","form","formReducer","store","createStore","renderField","field","label","input","_field$meta","meta","touched","error","warning","react_default","a","createElement","className","rows","reduxForm","validate","values","errors","description","sourceAddress","destinationAddress","props","handleSubmit","onSubmit","Field","name","component","MapWrapper","_Component","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","inherits","createClass","key","value","calculateDistance","prevProps","prevSourceLocation","prevDestinationLocation","_this$props","lat","lng","_this$props2","google","onDistance","maps","DistanceMatrixService","getDistanceMatrix","origins","destinations","travelMode","drivingOptions","departureTime","Date","trafficModel","response","status","elements","duration","result","text","_this$props3","dist","style","position","width","height","zoom","initialCenter","title","Component","GoogleApiWrapper","apiKey","getLocalItem","item","localStorage","getItem","JSON","parse","App","_this","call","submit","bind","assertThisInitialized","handleDistance","handleLogOut","history","session","Geocode","setApiKey","replace","isSource","address","onSetSourceLocation","onSetDestinationLocation","fromAddress","then","results","geometry","location","console","onServiceCreated","queryGeocode","onSetDistance","removeItem","components_MapWrapper","serviceCreatedJSX","distanceJSX","mapJSX","renderMap","onClick","react_router_dom","to","components_ServiceForm","connect","ownProps","dispatch","setSourceLocation","setDestinationLocation","setDistance","email","password","test","LogIn","onSetNotAuthenticated","push","prevAuthenticated","onLogIn","credentials","data","stringify","setItem","saveLocalItem","token","components_LogInForm","Root","parameter","es","react_router","exact","path","Boolean","window","hostname","match","ReactDOM","render","containers_Root","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5c533696.chunk.js","sourcesContent":["import { LOG_IN, SET_NOT_AUTHENTICATED } from \"./constants\";\n\nexport interface LogInState {\n  authenticated: boolean;\n}\n\nconst initialState: LogInState = {\n  authenticated: false\n};\n\nconst logInReducer = (\n  state: LogInState = initialState,\n  action: any\n): LogInState => {\n  switch (action.type) {\n    case LOG_IN:\n      return Object.assign({}, state, { authenticated: true });\n    case SET_NOT_AUTHENTICATED:\n      return Object.assign({}, state, { authenticated: false });\n    default:\n      return state;\n  }\n};\n\nexport default logInReducer;\n","export const LOG_IN = \"LogIn/LOG_IN\";\nexport const SET_NOT_AUTHENTICATED = \"LogIn/SET_NOT_AUTHENTICATED\";","import { SERVICE_CREATED_SUCCESSFULLY, SET_SOURCE_LOCATION, SET_DESTINATION_LOCATION, SET_DISTANCE } from \"./constants\";\nimport { Distance } from \"./index\";\n\nexport interface AppState {\n  serviceCreated: boolean;\n  sourceLocation: any;\n  destinationLocation: any;\n  distance: Distance | null;\n}\n\nconst initialState: AppState = {\n  serviceCreated: false,\n  sourceLocation: null,\n  destinationLocation: null,\n  distance: null\n};\n\nconst appReducer = (\n  state: AppState = initialState,\n  action: any\n): AppState => {\n  switch (action.type) {\n    case SERVICE_CREATED_SUCCESSFULLY:\n      return Object.assign({}, state, { serviceCreated: true });\n    case SET_SOURCE_LOCATION:\n      return Object.assign({}, state, { sourceLocation: action.sourceLocation });\n    case SET_DESTINATION_LOCATION:\n      return Object.assign({}, state, { destinationLocation: action.destinationLocation });\n    case SET_DISTANCE:\n      return Object.assign({}, state, { distance: action.distance });\n    default:\n      return state;\n  }\n};\n\nexport default appReducer;\n","export const SERVICE_CREATED_SUCCESSFULLY = \"App/SERVICE_CREATED_SUCCESSFULLY\";\nexport const SET_SOURCE_LOCATION = \"App/SET_SOURCE_LOCATION\";\nexport const SET_DESTINATION_LOCATION = \"App/SET_DESTINATION_LOCATION\";\nexport const SET_DISTANCE = \"App/SET_DISTANCE\";","import { combineReducers, Reducer } from \"redux\";\nimport { reducer as formReducer, FormStateMap } from \"redux-form\";\n\nimport logInReducer, { LogInState } from \"./containers/LogIn/reducer\";\nimport appReducer, { AppState } from \"./containers/App/reducer\";\n\nexport interface Action {\n  type: string;\n}\n\nexport interface Reducers {\n  app: AppState;\n  logIn: LogInState;\n  form: FormStateMap;\n}\n\nexport const rootReducer: Reducer<Reducers, Action> = combineReducers({\n  app: appReducer,\n  logIn: logInReducer,\n  form: formReducer\n});\n","import { createStore, combineReducers, Store } from \"redux\";\n\nimport { rootReducer, Reducers, Action } from \"./reducers\";\n\nconst store: Store<Reducers, Action> = createStore(rootReducer);\n\nexport default store;\n","import React, { InputHTMLAttributes, TextareaHTMLAttributes } from \"react\";\nimport { Field, reduxForm, FormErrors } from \"redux-form\";\n\nimport \"./styles.scss\";\n\ninterface RenderField {\n  input: any;\n  label: string;\n  type: string;\n  meta: {\n    touched: boolean;\n    error: boolean;\n    warning: boolean;\n  };\n}\n\nconst validate = (values: any): FormErrors<any, string> => {\n  const errors: FormErrors<any, string> = {};\n  const { description, sourceAddress, destinationAddress } = values;\n\n  if (description && description.length > 10000) {\n    errors.description = \"La descripción debe tener máximo 10.000 caracteres\";\n  }\n\n  if (!sourceAddress) {\n    errors.sourceAddress = \"Debes ingresar una dirección de origen\";\n  } else if (sourceAddress.length > 255) {\n    errors.sourceAddress =\n      \"La dirección de origen debe tener máximo 255 caracteres\";\n  }\n\n  if (!destinationAddress) {\n    errors.destinationAddress = \"Debes ingresar una dirección de destino\";\n  } else if (destinationAddress.length > 255) {\n    errors.destinationAddress =\n      \"La dirección de destino debe tener máximo 255 caracteres\";\n  }\n\n  return errors;\n};\n\nconst renderField = (field: RenderField): JSX.Element => {\n  const {\n    label,\n    input,\n    type,\n    meta: { touched, error, warning }\n  } = field;\n\n  return (\n    <div>\n      <label className=\"service-form__label\">{label}</label>\n      <br />\n      <div>\n        {type ? (\n          <input className=\"service-form__input\" {...input} type={type} />\n        ) : (\n          <textarea rows={5} className=\"service-form__textarea\" {...input} />\n        )}<br />\n        {touched &&\n          ((error && <span className=\"service-form__error\">{error}</span>) ||\n            (warning && <span>{warning}</span>))}\n      </div>\n      <br />\n      <br />\n    </div>\n  );\n};\n\nlet ServiceForm = (props: any) => {\n  const { handleSubmit } = props;\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <Field name=\"description\" component={renderField} label=\"Descripción\" />\n      <Field\n        name=\"sourceAddress\"\n        component={renderField}\n        type=\"text\"\n        label=\"Dirección de origen\"\n      />\n      <Field\n        name=\"destinationAddress\"\n        component={renderField}\n        type=\"text\"\n        label=\"Dirección de destino\"\n      />\n      <div>\n        <button className=\"service-form__button\" type=\"submit\">Crear</button>\n      </div>\n    </form>\n  );\n};\n\nexport default reduxForm({\n  form: \"service\",\n  validate\n})(ServiceForm);\n","import React, { Component } from \"react\";\nimport { Map, GoogleApiWrapper, Marker } from \"google-maps-react\";\n\nexport class MapWrapper extends Component {\n  componentDidMount() {\n    this.calculateDistance();\n  }\n\n  componentDidUpdate(prevProps) {\n    const {\n      sourceLocation: prevSourceLocation,\n      destinationLocation: prevDestinationLocation\n    } = prevProps;\n    const { sourceLocation, destinationLocation } = this.props;\n\n    if (\n      prevSourceLocation.lat !== sourceLocation.lat ||\n      prevSourceLocation.lng !== sourceLocation.lng\n    ) {\n      this.calculateDistance();\n    } else if (\n      prevDestinationLocation.lat !== destinationLocation.lat ||\n      prevDestinationLocation.lng !== destinationLocation.lng\n    ) {\n      this.calculateDistance();\n    }\n  }\n\n  calculateDistance() {\n    const {\n      google,\n      sourceLocation,\n      destinationLocation,\n      onDistance\n    } = this.props;\n\n    const service = new google.maps.DistanceMatrixService();\n    service.getDistanceMatrix(\n      {\n        origins: [sourceLocation],\n        destinations: [destinationLocation],\n        travelMode: \"DRIVING\",\n        drivingOptions: {\n          departureTime: new Date(),\n          trafficModel: \"optimistic\"\n        }\n      },\n      (response, status) => {\n        if (\n          status === \"OK\" &&\n          response.rows &&\n          response.rows.length > 0 &&\n          response.rows[0].elements &&\n          response.rows[0].elements.length > 0 &&\n          response.rows[0].elements[0].distance &&\n          response.rows[0].elements[0].duration\n        ) {\n          const result = {\n            distance: response.rows[0].elements[0].distance.text,\n            duration: response.rows[0].elements[0].duration.text\n          };\n          onDistance(result);\n        } else {\n          onDistance(null);\n        }\n      }\n    );\n  }\n\n  render() {\n    const { google, sourceLocation, destinationLocation } = this.props;\n    const style = {\n      position: \"relative\",\n      width: \"800px\",\n      height: \"400px\"\n    };\n\n    return (\n      <Map\n        style={style}\n        google={google}\n        zoom={14}\n        initialCenter={sourceLocation}\n      >\n        <Marker title={\"Origen\"} name={\"Origen\"} position={sourceLocation} />\n        <Marker\n          title={\"Destino\"}\n          name={\"Destino\"}\n          position={destinationLocation}\n        />\n      </Map>\n    );\n  }\n}\n\nexport default GoogleApiWrapper({\n  apiKey: \"AIzaSyCgWMCE2RtiNMu3smD1tbbj1hP5VVsFAdQ\"\n})(MapWrapper);\n","export const getLocalItem = (key: string): any => {\n  const item: string | null = localStorage.getItem(key);\n\n  return item ? JSON.parse(item) : item;\n}\n\nexport const saveLocalItem = (key: string, data: any): void => {\n  const item: string = JSON.stringify(data);\n\n  localStorage.setItem(key, item);\n}\n\nexport const removeItem = (key: string): void => {\n  localStorage.removeItem(key);\n}","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport Geocode from \"react-geocode\";\n\nimport \"./styles.scss\";\nimport {\n  serviceCreatedSuccessfully,\n  setSourceLocation,\n  setDestinationLocation,\n  setDistance\n} from \"./actions\";\nimport { Session } from \"../LogIn\";\nimport ServiceForm from \"../../components/ServiceForm\";\nimport MapWrapper from \"../../components/MapWrapper\";\nimport { getLocalItem, removeItem } from \"../../utils/storage\";\n\nexport interface Distance {\n  distance: string;\n  duration: string;\n}\n\ninterface AppProps {\n  history: any;\n  serviceCreated: boolean;\n  sourceLocation: any;\n  destinationLocation: any;\n  distance: Distance;\n  onServiceCreated(): void;\n  onSetSourceLocation(sourceLocation: any): void;\n  onSetDestinationLocation(destinationLocation: any): void;\n  onSetDistance(distance: Distance | null): void;\n}\n\nclass App extends Component<AppProps, {}> {\n  constructor(props: any) {\n    super(props);\n\n    this.submit = this.submit.bind(this);\n    this.handleDistance = this.handleDistance.bind(this);\n    this.handleLogOut = this.handleLogOut.bind(this);\n  }\n\n  componentDidMount() {\n    const { history } = this.props;\n    const session: Session = getLocalItem(\"session\");\n\n    Geocode.setApiKey(\"AIzaSyCgWMCE2RtiNMu3smD1tbbj1hP5VVsFAdQ\");\n    if (!session) {\n      history.replace(\"/log-in\");\n    }\n  }\n\n  queryGeocode(isSource: boolean, address: string): void {\n    const { onSetSourceLocation, onSetDestinationLocation } = this.props;\n\n    Geocode.fromAddress(address).then((response: any) => {\n      const result: any = response.results[0];\n      if (isSource) {\n        onSetSourceLocation(result.geometry.location);\n      } else {\n        onSetDestinationLocation(result.geometry.location);\n      }\n    }, (error: any) => {\n      console.error(error);\n    });\n  }\n\n  submit(values: any): void {\n    const { onServiceCreated } = this.props;\n    const { sourceAddress, destinationAddress } = values;\n\n    onServiceCreated();\n    this.queryGeocode(true, sourceAddress);\n    this.queryGeocode(false, destinationAddress);\n  }\n\n  handleDistance(distance: Distance | null): void {\n    const { onSetDistance } = this.props;\n\n    onSetDistance(distance);\n  }\n\n  handleLogOut(): void {\n    const { history } = this.props;\n\n    removeItem(\"session\");\n  }\n\n  renderMap(): JSX.Element | null {\n    const { sourceLocation, destinationLocation } = this.props;\n\n    if (!sourceLocation || !destinationLocation) {\n      return null;\n    }\n\n    return (\n      <div className=\"app__content__map\">\n        <MapWrapper sourceLocation={sourceLocation} destinationLocation={destinationLocation} onDistance={this.handleDistance} />\n      </div>\n    );\n  }\n\n  render() {\n    const { serviceCreated, distance } = this.props;\n    const serviceCreatedJSX: JSX.Element | null = serviceCreated ? (\n      <span className=\"app__content__created\">¡Servicio creado exitosamente!</span>\n    ) : null;\n    const distanceJSX: JSX.Element | null = distance ? (\n      <div>\n        <p><span className=\"app__content__subtitle\">Distancia: </span>{distance.distance}</p>\n        <p><span className=\"app__content__subtitle\">Duración: </span>{distance.duration}</p>\n      </div>\n    ) : null;\n    const mapJSX: JSX.Element | null = this.renderMap();\n\n    return (\n      <div className=\"app\">\n        <div className=\"app__content\">\n          <h2 className=\"app__content__title\">Creación de servicio</h2>\n          <button className=\"app__content__button\" onClick={this.handleLogOut}>\n            <Link to=\"/log-in\">\n              Cerrar sesión\n            </Link>\n          </button>\n          <ServiceForm onSubmit={this.submit} />\n          <br />\n          {serviceCreatedJSX}\n          {distanceJSX}\n          {mapJSX}\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any, ownProps: any) => ({\n  serviceCreated: state.app.serviceCreated,\n  sourceLocation: state.app.sourceLocation,\n  destinationLocation: state.app.destinationLocation,\n  distance: state.app.distance\n});\n\nconst mapDispatchToProps = (dispatch: any) => {\n  return {\n    onServiceCreated: () => dispatch(serviceCreatedSuccessfully()),\n    onSetSourceLocation: (sourceLocation: any) =>\n      dispatch(setSourceLocation(sourceLocation)),\n    onSetDestinationLocation: (destinationLocation: any) =>\n      dispatch(setDestinationLocation(destinationLocation)),\n    onSetDistance: (distance: Distance | null) => dispatch(setDistance(distance)),\n    dispatch\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(App);\n","import { SERVICE_CREATED_SUCCESSFULLY, SET_SOURCE_LOCATION, SET_DESTINATION_LOCATION, SET_DISTANCE } from \"./constants\";\nimport { Distance } from \"./index\";\n\nexport const serviceCreatedSuccessfully = () => {\n  return {\n    type: SERVICE_CREATED_SUCCESSFULLY\n  }\n}\n\nexport const setSourceLocation = (sourceLocation: any) => {\n  return {\n    type: SET_SOURCE_LOCATION,\n    sourceLocation\n  }\n}\n\nexport const setDestinationLocation = (destinationLocation: any) => {\n  return {\n    type: SET_DESTINATION_LOCATION,\n    destinationLocation\n  }\n}\n\nexport const setDistance = (distance: Distance | null) => {\n  return {\n    type: SET_DISTANCE,\n    distance\n  }\n}","import React, { InputHTMLAttributes } from \"react\";\nimport { Field, reduxForm, FormErrors } from \"redux-form\";\n\nimport \"./styles.scss\";\n\ninterface RenderField {\n  input: InputHTMLAttributes<HTMLInputElement>;\n  label: string;\n  type: string;\n  meta: {\n    touched: boolean;\n    error: boolean;\n    warning: boolean;\n  };\n}\n\nconst validate = (values: any): FormErrors<any, string> => {\n  const errors: FormErrors<any, string> = {};\n  const { email, password } = values;\n\n  if (!email) {\n    errors.email = \"Debes ingresar un correo\";\n  } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(email)) {\n    errors.email = \"Debes ingresar un correo válido\";\n  } else if (email.length > 255) {\n    errors.email = \"El correo debe tener máximo 255 caracteres\";\n  }\n\n  if (!password) {\n    errors.password = \"Debes ingresar una contraseña\";\n  } else if (password.length < 8) {\n    errors.password = \"La contraseña debe tener mínimo 8 caracteres\";\n  } else if (password.length > 255) {\n    errors.password = \"La contraseña debe tener máximo 255 caracteres\";\n  }\n\n  return errors;\n};\n\nconst renderField = (field: RenderField): JSX.Element => {\n  const {\n    label,\n    input,\n    type,\n    meta: { touched, error, warning }\n  } = field;\n\n  return (\n    <div>\n      <label className=\"log-in-form__label\">{label}</label>\n      <br />\n      <div>\n        <input className=\"log-in-form__input\" {...input} type={type} /><br />\n        {touched &&\n          ((error && <span className=\"log-in-form__error\">{error}</span>) ||\n            (warning && <span>{warning}</span>))}\n      </div>\n      <br />\n      <br />\n    </div>\n  );\n};\n\nlet LogInForm = (props: any) => {\n  const { handleSubmit } = props;\n\n  return (\n    <form className=\"log-in-form\" onSubmit={handleSubmit}>\n      <Field\n        name=\"email\"\n        component={renderField}\n        type=\"text\"\n        label=\"Correo electrónico\"\n      />\n      <Field\n        name=\"password\"\n        component={renderField}\n        type=\"password\"\n        label=\"Contraseña\"\n      />\n      <div>\n        <button className=\"log-in-form__button\" type=\"submit\">Ingresar</button>\n      </div>\n    </form>\n  );\n};\n\nexport default reduxForm({\n  form: \"logIn\",\n  validate\n})(LogInForm);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport \"./styles.scss\";\nimport { logIn, setNotAuthenticated } from \"./actions\";\nimport LogInForm from \"../../components/LogInForm\";\nimport { getLocalItem, saveLocalItem } from \"../../utils/storage\";\n\nexport interface Credentials {\n  email: string,\n  password: string\n}\n\nexport interface Session {\n  authenticated: boolean,\n  token: string\n}\n\ninterface LogInProps {\n  authenticated: boolean;\n  history: any;\n  onLogIn(credentials: Credentials): void;\n  onSetNotAuthenticated(): void;\n}\n\nclass LogIn extends Component<LogInProps, {}> {\n  constructor(props: any) {\n    super(props);\n\n    this.submit = this.submit.bind(this);\n  }\n\n  componentDidMount() {\n    const { history, onSetNotAuthenticated } = this.props;\n    const session: Session = getLocalItem(\"session\");\n    \n    if (session) {\n      history.push(\"/\");\n    } else {\n      onSetNotAuthenticated();\n    }\n  }\n\n  componentDidUpdate(prevProps: any) {\n    const { authenticated: prevAuthenticated } = prevProps;\n    const { authenticated, history } = this.props;\n\n    if (prevAuthenticated !== authenticated && authenticated) {\n      history.push(\"/\");\n    }\n  }\n\n  submit(values: any): void {\n    const { onLogIn } = this.props;\n    const credentials: Credentials = {\n      email: values.email,\n      password: values.password\n    };\n    const session: Session = {\n      authenticated: true,\n      token: \"TestToken\"\n    };\n\n    saveLocalItem(\"session\", session);\n    onLogIn(credentials);\n  }\n\n  render() {\n    return (\n      <div className=\"log-in\">\n        <div className=\"log-in__section\">\n          <h2 className=\"log-in__section__title\">Iniciar sesión</h2>\n          <div className=\"log-in__section__form\">\n            <LogInForm onSubmit={this.submit} />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any, ownProps: any) => ({\n  authenticated: state.logIn.authenticated\n});\n\nconst mapDispatchToProps = (dispatch: any) => ({\n  onLogIn: (credentials: Credentials) => dispatch(logIn(credentials)),\n  onSetNotAuthenticated: () => dispatch(setNotAuthenticated()),\n  dispatch\n});\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(LogIn);\n","import { LOG_IN, SET_NOT_AUTHENTICATED } from \"./constants\";\nimport { Credentials } from \"./index\";\n\nexport const logIn = (credentials: Credentials) => {\n  return {\n    type: LOG_IN,\n    credentials\n  }\n}\n\nexport const setNotAuthenticated = () => {\n  return {\n    type: SET_NOT_AUTHENTICATED\n  }\n}","import React from 'react';\nimport { Store } from 'redux';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\n\nimport { Reducers, Action } from \"../../reducers\";\nimport App from '../App';\nimport LogIn from '../LogIn';\n\ninterface StoreParameter {\n  store: Store<Reducers, Action>\n}\n\nconst Root = (parameter: StoreParameter) => {\n  const { store } = parameter;\n\n  return (\n    <Provider store={store}>\n      <Router>\n        <Route exact path=\"/\" component={App} />\n        <Route path=\"/log-in\" component={LogIn} />\n      </Router>\n    </Provider>\n  );\n}\n\nexport default Root;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport store from './store';\nimport Root from './containers/Root';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <Root store={store} />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}